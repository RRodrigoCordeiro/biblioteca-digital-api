// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER        // s√≥ pode pegar emprestado
  USERLIBRARIAN   // pode pegar emprestado e cadastrar livros
  ADMIN       // pode td
}

model Book {
  id             Int @id @default(autoincrement())
  title          String
  author         String
  description    String
  category       String
  publishedYear  Int
  available      Int
  createdAt      DateTime? @default(now())
  userId         Int?
  user User? @relation(fields: [userId], references: [id],onDelete: Cascade)  
  loans Loan[]
}

model User{
  id           Int @id @default(autoincrement())
  name         String
  passwordHash String
  email        String @unique
  createdAt    DateTime? @default(now())
  role         Role     @default(USERLIBRARIAN) 
  Book Book[]
  loans Loan[] 
}

model Loan {
  id        Int      @id @default(autoincrement())
  userId    Int
  bookId    Int
  startDate DateTime @default(now())
  endDate   DateTime?
  returned  Boolean  @default(false)

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  book Book @relation(fields: [bookId], references: [id], onDelete: Cascade)
}